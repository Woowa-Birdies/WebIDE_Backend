plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'goorm.woowa'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // spring boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-client'

    // AWS SDK
    implementation 'software.amazon.awssdk:bom:2.17.0'
    implementation 'software.amazon.awssdk:ecs:2.17.0'
    implementation 'software.amazon.awssdk:efs:2.17.0'

    // logger
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // h2
    runtimeOnly 'com.h2database:h2'

    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'
    compileOnly 'com.mysql:mysql-connector-j'

    // mongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    //websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    //Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // gson
    implementation 'com.google.code.gson:gson:2.10.1'

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'de.codecentric:spring-boot-admin-starter-client:3.2.3'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [generated]
}

clean.doLast {
    file(generated).deleteDir()
}

jar {
    enabled = false
}

processResources.dependsOn('copySecret')

tasks.register('copySecret', Copy) {
    from './WebIDE_BackEnd_Private'
    include "*.yml"  // 복사할 파일들
    include "*.properties"
    into 'src/main/resources'  // 복사 위치
}